# HELP librdkafka_age Time since this client instance was created (microseconds)
# TYPE librdkafka_age counter
librdkafka_age{client_id="rdkafka",type="consumer"} 7.2023609e+07
# HELP librdkafka_brokers_connects Number of connection attempts, including successful and failed, and name resolution failures.
# TYPE librdkafka_brokers_connects counter
librdkafka_brokers_connects{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 1
librdkafka_brokers_connects{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 1
# HELP librdkafka_brokers_disconnects Number of disconnects (triggered by broker, network, load-balancer, etc.).
# TYPE librdkafka_brokers_disconnects counter
librdkafka_brokers_disconnects{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_disconnects{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 0
# HELP librdkafka_brokers_int_latency Internal producer queue latency in microseconds.
# TYPE librdkafka_brokers_int_latency summary
librdkafka_brokers_int_latency{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.5"} 0
librdkafka_brokers_int_latency{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.75"} 0
librdkafka_brokers_int_latency{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.9"} 0
librdkafka_brokers_int_latency{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.95"} 0
librdkafka_brokers_int_latency{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.99"} 0
librdkafka_brokers_int_latency{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.9999"} 0
librdkafka_brokers_int_latency_sum{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_int_latency_count{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_int_latency{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.5"} 0
librdkafka_brokers_int_latency{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.75"} 0
librdkafka_brokers_int_latency{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.9"} 0
librdkafka_brokers_int_latency{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.95"} 0
librdkafka_brokers_int_latency{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.99"} 0
librdkafka_brokers_int_latency{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.9999"} 0
librdkafka_brokers_int_latency_sum{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 0
librdkafka_brokers_int_latency_count{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 0
# HELP librdkafka_brokers_outbuf_cnt Number of requests awaiting transmission to broker.
# TYPE librdkafka_brokers_outbuf_cnt gauge
librdkafka_brokers_outbuf_cnt{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_outbuf_cnt{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 0
# HELP librdkafka_brokers_outbuf_latency Internal request queue latency in microseconds. This is the time between a request is enqueued on the transmit (outbuf) queue and the time the request is written to the TCP socket. Additional buffering and latency may be incurred by the TCP stack and network.
# TYPE librdkafka_brokers_outbuf_latency summary
librdkafka_brokers_outbuf_latency{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.5"} 0
librdkafka_brokers_outbuf_latency{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.75"} 0
librdkafka_brokers_outbuf_latency{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.9"} 0
librdkafka_brokers_outbuf_latency{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.95"} 0
librdkafka_brokers_outbuf_latency{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.99"} 0
librdkafka_brokers_outbuf_latency{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.9999"} 0
librdkafka_brokers_outbuf_latency_sum{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_outbuf_latency_count{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_outbuf_latency{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.5"} 54
librdkafka_brokers_outbuf_latency{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.75"} 65
librdkafka_brokers_outbuf_latency{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.9"} 65
librdkafka_brokers_outbuf_latency{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.95"} 65
librdkafka_brokers_outbuf_latency{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.99"} 65
librdkafka_brokers_outbuf_latency{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.9999"} 65
librdkafka_brokers_outbuf_latency_sum{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 119
librdkafka_brokers_outbuf_latency_count{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 2
# HELP librdkafka_brokers_outbuf_msg_cnt Number of messages awaiting transmission to broker.
# TYPE librdkafka_brokers_outbuf_msg_cnt gauge
librdkafka_brokers_outbuf_msg_cnt{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_outbuf_msg_cnt{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 0
# HELP librdkafka_brokers_req Request type counters.
# TYPE librdkafka_brokers_req counter
librdkafka_brokers_req{name="GroupCoordinator",nodename="localhost:9092",req="ApiVersion",source="logical"} 1
librdkafka_brokers_req{name="GroupCoordinator",nodename="localhost:9092",req="DescribeCluster",source="logical"} 0
librdkafka_brokers_req{name="GroupCoordinator",nodename="localhost:9092",req="DescribeProducers",source="logical"} 0
librdkafka_brokers_req{name="GroupCoordinator",nodename="localhost:9092",req="DescribeTransactions",source="logical"} 0
librdkafka_brokers_req{name="GroupCoordinator",nodename="localhost:9092",req="Fetch",source="logical"} 0
librdkafka_brokers_req{name="GroupCoordinator",nodename="localhost:9092",req="FindCoordinator",source="logical"} 0
librdkafka_brokers_req{name="GroupCoordinator",nodename="localhost:9092",req="Heartbeat",source="logical"} 14
librdkafka_brokers_req{name="GroupCoordinator",nodename="localhost:9092",req="JoinGroup",source="logical"} 2
librdkafka_brokers_req{name="GroupCoordinator",nodename="localhost:9092",req="LeaveGroup",source="logical"} 0
librdkafka_brokers_req{name="GroupCoordinator",nodename="localhost:9092",req="ListOffsets",source="logical"} 0
librdkafka_brokers_req{name="GroupCoordinator",nodename="localhost:9092",req="ListTransactions",source="logical"} 0
librdkafka_brokers_req{name="GroupCoordinator",nodename="localhost:9092",req="Metadata",source="logical"} 2
librdkafka_brokers_req{name="GroupCoordinator",nodename="localhost:9092",req="OffsetCommit",source="logical"} 1
librdkafka_brokers_req{name="GroupCoordinator",nodename="localhost:9092",req="OffsetFetch",source="logical"} 1
librdkafka_brokers_req{name="GroupCoordinator",nodename="localhost:9092",req="SaslAuthenticate",source="logical"} 0
librdkafka_brokers_req{name="GroupCoordinator",nodename="localhost:9092",req="SaslHandshake",source="logical"} 0
librdkafka_brokers_req{name="GroupCoordinator",nodename="localhost:9092",req="SyncGroup",source="logical"} 1
librdkafka_brokers_req{name="GroupCoordinator",nodename="localhost:9092",req="Unknown-62?",source="logical"} 0
librdkafka_brokers_req{name="localhost:9092/1",nodename="localhost:9092",req="ApiVersion",source="configured"} 1
librdkafka_brokers_req{name="localhost:9092/1",nodename="localhost:9092",req="DescribeCluster",source="configured"} 0
librdkafka_brokers_req{name="localhost:9092/1",nodename="localhost:9092",req="DescribeProducers",source="configured"} 0
librdkafka_brokers_req{name="localhost:9092/1",nodename="localhost:9092",req="DescribeTransactions",source="configured"} 0
librdkafka_brokers_req{name="localhost:9092/1",nodename="localhost:9092",req="Fetch",source="configured"} 82
librdkafka_brokers_req{name="localhost:9092/1",nodename="localhost:9092",req="FindCoordinator",source="configured"} 2
librdkafka_brokers_req{name="localhost:9092/1",nodename="localhost:9092",req="Heartbeat",source="configured"} 0
librdkafka_brokers_req{name="localhost:9092/1",nodename="localhost:9092",req="JoinGroup",source="configured"} 0
librdkafka_brokers_req{name="localhost:9092/1",nodename="localhost:9092",req="LeaveGroup",source="configured"} 0
librdkafka_brokers_req{name="localhost:9092/1",nodename="localhost:9092",req="ListOffsets",source="configured"} 0
librdkafka_brokers_req{name="localhost:9092/1",nodename="localhost:9092",req="ListTransactions",source="configured"} 0
librdkafka_brokers_req{name="localhost:9092/1",nodename="localhost:9092",req="Metadata",source="configured"} 2
librdkafka_brokers_req{name="localhost:9092/1",nodename="localhost:9092",req="OffsetCommit",source="configured"} 0
librdkafka_brokers_req{name="localhost:9092/1",nodename="localhost:9092",req="OffsetFetch",source="configured"} 0
librdkafka_brokers_req{name="localhost:9092/1",nodename="localhost:9092",req="SaslAuthenticate",source="configured"} 0
librdkafka_brokers_req{name="localhost:9092/1",nodename="localhost:9092",req="SaslHandshake",source="configured"} 0
librdkafka_brokers_req{name="localhost:9092/1",nodename="localhost:9092",req="SyncGroup",source="configured"} 0
librdkafka_brokers_req{name="localhost:9092/1",nodename="localhost:9092",req="Unknown-62?",source="configured"} 0
# HELP librdkafka_brokers_req_timeouts Total number of requests timed out.
# TYPE librdkafka_brokers_req_timeouts counter
librdkafka_brokers_req_timeouts{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_req_timeouts{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 0
# HELP librdkafka_brokers_rtt Broker latency / round-trip time in microseconds.
# TYPE librdkafka_brokers_rtt summary
librdkafka_brokers_rtt{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.5"} 0
librdkafka_brokers_rtt{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.75"} 0
librdkafka_brokers_rtt{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.9"} 0
librdkafka_brokers_rtt{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.95"} 0
librdkafka_brokers_rtt{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.99"} 0
librdkafka_brokers_rtt{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.9999"} 0
librdkafka_brokers_rtt_sum{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_rtt_count{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_rtt{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.5"} 501759
librdkafka_brokers_rtt{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.75"} 501759
librdkafka_brokers_rtt{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.9"} 501759
librdkafka_brokers_rtt{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.95"} 501759
librdkafka_brokers_rtt{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.99"} 501759
librdkafka_brokers_rtt{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.9999"} 501759
librdkafka_brokers_rtt_sum{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 1.003153e+06
librdkafka_brokers_rtt_count{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 2
# HELP librdkafka_brokers_rx Total number of responses received.
# TYPE librdkafka_brokers_rx counter
librdkafka_brokers_rx{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 22
librdkafka_brokers_rx{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 86
# HELP librdkafka_brokers_rxbytes Total number of bytes received.
# TYPE librdkafka_brokers_rxbytes counter
librdkafka_brokers_rxbytes{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 1427
librdkafka_brokers_rxbytes{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 1.229847e+06
# HELP librdkafka_brokers_rxcorriderrs Total number of unmatched correlation ids in response (typically for timed out requests).
# TYPE librdkafka_brokers_rxcorriderrs counter
librdkafka_brokers_rxcorriderrs{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_rxcorriderrs{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 0
# HELP librdkafka_brokers_rxerrs Total number of receive errors.
# TYPE librdkafka_brokers_rxerrs counter
librdkafka_brokers_rxerrs{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_rxerrs{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 0
# HELP librdkafka_brokers_rxidle Microseconds since last socket receive (or -1 if no receives yet for current connection).
# TYPE librdkafka_brokers_rxidle counter
librdkafka_brokers_rxidle{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 1.020246e+06
librdkafka_brokers_rxidle{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 393819
# HELP librdkafka_brokers_rxpartial Total number of partial MessageSets received. The broker may return partial responses if the full MessageSet could not fit in the remaining Fetch response size.
# TYPE librdkafka_brokers_rxpartial counter
librdkafka_brokers_rxpartial{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_rxpartial{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 0
# HELP librdkafka_brokers_throttle Broker throttling time in milliseconds.
# TYPE librdkafka_brokers_throttle summary
librdkafka_brokers_throttle{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.5"} 0
librdkafka_brokers_throttle{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.75"} 0
librdkafka_brokers_throttle{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.9"} 0
librdkafka_brokers_throttle{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.95"} 0
librdkafka_brokers_throttle{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.99"} 0
librdkafka_brokers_throttle{name="GroupCoordinator",nodename="localhost:9092",source="logical",quantile="0.9999"} 0
librdkafka_brokers_throttle_sum{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_throttle_count{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_throttle{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.5"} 0
librdkafka_brokers_throttle{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.75"} 0
librdkafka_brokers_throttle{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.9"} 0
librdkafka_brokers_throttle{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.95"} 0
librdkafka_brokers_throttle{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.99"} 0
librdkafka_brokers_throttle{name="localhost:9092/1",nodename="localhost:9092",source="configured",quantile="0.9999"} 0
librdkafka_brokers_throttle_sum{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 0
librdkafka_brokers_throttle_count{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 0
# HELP librdkafka_brokers_tx Total number of requests sent.
# TYPE librdkafka_brokers_tx counter
librdkafka_brokers_tx{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 22
librdkafka_brokers_tx{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 87
# HELP librdkafka_brokers_txbytes Total number of bytes sent.
# TYPE librdkafka_brokers_txbytes counter
librdkafka_brokers_txbytes{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 2217
librdkafka_brokers_txbytes{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 12713
# HELP librdkafka_brokers_txerrs Total number of transmission errors.
# TYPE librdkafka_brokers_txerrs counter
librdkafka_brokers_txerrs{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_txerrs{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 0
# HELP librdkafka_brokers_txidle Microseconds since last socket send (or -1 if no sends yet for current connection).
# TYPE librdkafka_brokers_txidle counter
librdkafka_brokers_txidle{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 1.021525e+06
librdkafka_brokers_txidle{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 393732
# HELP librdkafka_brokers_txretries Total number of request retries.
# TYPE librdkafka_brokers_txretries counter
librdkafka_brokers_txretries{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_txretries{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 0
# HELP librdkafka_brokers_waitresp_cnt Number of requests in-flight to broker awaiting response.
# TYPE librdkafka_brokers_waitresp_cnt gauge
librdkafka_brokers_waitresp_cnt{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_waitresp_cnt{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 1
# HELP librdkafka_brokers_waitresp_msg_cnt Number of messages in-flight to broker awaiting response.
# TYPE librdkafka_brokers_waitresp_msg_cnt gauge
librdkafka_brokers_waitresp_msg_cnt{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_waitresp_msg_cnt{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 0
# HELP librdkafka_brokers_wakeups Broker thread poll loop wakeups.
# TYPE librdkafka_brokers_wakeups counter
librdkafka_brokers_wakeups{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 122
librdkafka_brokers_wakeups{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 253
# HELP librdkafka_brokers_zbuf_grow Total number of decompression buffer size increases.
# TYPE librdkafka_brokers_zbuf_grow counter
librdkafka_brokers_zbuf_grow{name="GroupCoordinator",nodename="localhost:9092",source="logical"} 0
librdkafka_brokers_zbuf_grow{name="localhost:9092/1",nodename="localhost:9092",source="configured"} 0
# HELP librdkafka_cgrp_assignment_size Current assignment's partition count.
# TYPE librdkafka_cgrp_assignment_size gauge
librdkafka_cgrp_assignment_size 3
# HELP librdkafka_cgrp_rebalance_age Time elapsed since last rebalance (assign or revoke) (milliseconds).
# TYPE librdkafka_cgrp_rebalance_age gauge
librdkafka_cgrp_rebalance_age 40039
# HELP librdkafka_cgrp_rebalance_cnt Total number of rebalances (assign or revoke).
# TYPE librdkafka_cgrp_rebalance_cnt counter
librdkafka_cgrp_rebalance_cnt 1
# HELP librdkafka_metadata_cache_cnt Number of topics in the metadata cache.
# TYPE librdkafka_metadata_cache_cnt gauge
librdkafka_metadata_cache_cnt{client_id="rdkafka",type="consumer"} 1
# HELP librdkafka_msg_cnt Current number of messages in producer queues.
# TYPE librdkafka_msg_cnt gauge
librdkafka_msg_cnt{client_id="rdkafka",type="consumer"} 0
# HELP librdkafka_msg_max Threshold: maximum number of messages allowed allowed on the producer queues.
# TYPE librdkafka_msg_max counter
librdkafka_msg_max{client_id="rdkafka",type="consumer"} 0
# HELP librdkafka_msg_size Current total size of messages in producer queues.
# TYPE librdkafka_msg_size gauge
librdkafka_msg_size{client_id="rdkafka",type="consumer"} 0
# HELP librdkafka_msg_size_max Threshold: maximum total size of messages allowed on the producer queues.
# TYPE librdkafka_msg_size_max counter
librdkafka_msg_size_max{client_id="rdkafka",type="consumer"} 0
# HELP librdkafka_partitions_acked_msgid Last acked internal message id (idempotent producer).
# TYPE librdkafka_partitions_acked_msgid counter
librdkafka_partitions_acked_msgid{partition="-1",topic="example"} 0
librdkafka_partitions_acked_msgid{partition="0",topic="example"} 0
librdkafka_partitions_acked_msgid{partition="1",topic="example"} 0
librdkafka_partitions_acked_msgid{partition="2",topic="example"} 0
# HELP librdkafka_partitions_app_offset Offset of last message passed to application + 1.
# TYPE librdkafka_partitions_app_offset gauge
librdkafka_partitions_app_offset{partition="-1",topic="example"} -1001
librdkafka_partitions_app_offset{partition="0",topic="example"} 502316
librdkafka_partitions_app_offset{partition="1",topic="example"} 381691
librdkafka_partitions_app_offset{partition="2",topic="example"} 400983
# HELP librdkafka_partitions_committed_leader_epoch Partition leader epoch of committed offset.
# TYPE librdkafka_partitions_committed_leader_epoch counter
librdkafka_partitions_committed_leader_epoch{partition="-1",topic="example"} -1
librdkafka_partitions_committed_leader_epoch{partition="0",topic="example"} 0
librdkafka_partitions_committed_leader_epoch{partition="1",topic="example"} 0
librdkafka_partitions_committed_leader_epoch{partition="2",topic="example"} 0
# HELP librdkafka_partitions_committed_offset Last committed offset.
# TYPE librdkafka_partitions_committed_offset gauge
librdkafka_partitions_committed_offset{partition="-1",topic="example"} -1001
librdkafka_partitions_committed_offset{partition="0",topic="example"} 502316
librdkafka_partitions_committed_offset{partition="1",topic="example"} 381691
librdkafka_partitions_committed_offset{partition="2",topic="example"} 400983
# HELP librdkafka_partitions_consumer_lag Difference between (hi_offset or ls_offset) and committed_offset). hi_offset is used when isolation.level=read_uncommitted, otherwise ls_offset.
# TYPE librdkafka_partitions_consumer_lag gauge
librdkafka_partitions_consumer_lag{partition="-1",topic="example"} -1
librdkafka_partitions_consumer_lag{partition="0",topic="example"} 0
librdkafka_partitions_consumer_lag{partition="1",topic="example"} 0
librdkafka_partitions_consumer_lag{partition="2",topic="example"} 0
# HELP librdkafka_partitions_consumer_lag_stored Difference between (hi_offset or ls_offset) and stored_offset. See consumer_lag and stored_offset.
# TYPE librdkafka_partitions_consumer_lag_stored gauge
librdkafka_partitions_consumer_lag_stored{partition="-1",topic="example"} -1
librdkafka_partitions_consumer_lag_stored{partition="0",topic="example"} 0
librdkafka_partitions_consumer_lag_stored{partition="1",topic="example"} 0
librdkafka_partitions_consumer_lag_stored{partition="2",topic="example"} 0
# HELP librdkafka_partitions_eof_offset Last PARTITION_EOF signaled offset.
# TYPE librdkafka_partitions_eof_offset gauge
librdkafka_partitions_eof_offset{partition="-1",topic="example"} -1001
librdkafka_partitions_eof_offset{partition="0",topic="example"} 502316
librdkafka_partitions_eof_offset{partition="1",topic="example"} 381691
librdkafka_partitions_eof_offset{partition="2",topic="example"} 400983
# HELP librdkafka_partitions_fetchq_cnt Number of pre-fetched messages in fetch queue.
# TYPE librdkafka_partitions_fetchq_cnt gauge
librdkafka_partitions_fetchq_cnt{partition="-1",topic="example"} 0
librdkafka_partitions_fetchq_cnt{partition="0",topic="example"} 0
librdkafka_partitions_fetchq_cnt{partition="1",topic="example"} 0
librdkafka_partitions_fetchq_cnt{partition="2",topic="example"} 0
# HELP librdkafka_partitions_fetchq_size Bytes in fetchq.
# TYPE librdkafka_partitions_fetchq_size gauge
librdkafka_partitions_fetchq_size{partition="-1",topic="example"} 0
librdkafka_partitions_fetchq_size{partition="0",topic="example"} 0
librdkafka_partitions_fetchq_size{partition="1",topic="example"} 0
librdkafka_partitions_fetchq_size{partition="2",topic="example"} 0
# HELP librdkafka_partitions_hi_offset Partition's high watermark offset on broker.
# TYPE librdkafka_partitions_hi_offset gauge
librdkafka_partitions_hi_offset{partition="-1",topic="example"} -1001
librdkafka_partitions_hi_offset{partition="0",topic="example"} 502316
librdkafka_partitions_hi_offset{partition="1",topic="example"} 381691
librdkafka_partitions_hi_offset{partition="2",topic="example"} 400983
# HELP librdkafka_partitions_leader_epoch Last known partition leader epoch, or -1 if unknown.
# TYPE librdkafka_partitions_leader_epoch counter
librdkafka_partitions_leader_epoch{partition="-1",topic="example"} -1
librdkafka_partitions_leader_epoch{partition="0",topic="example"} -1
librdkafka_partitions_leader_epoch{partition="1",topic="example"} -1
librdkafka_partitions_leader_epoch{partition="2",topic="example"} -1
# HELP librdkafka_partitions_lo_offset Partition's low watermark offset on broker.
# TYPE librdkafka_partitions_lo_offset gauge
librdkafka_partitions_lo_offset{partition="-1",topic="example"} -1001
librdkafka_partitions_lo_offset{partition="0",topic="example"} 0
librdkafka_partitions_lo_offset{partition="1",topic="example"} 0
librdkafka_partitions_lo_offset{partition="2",topic="example"} 0
# HELP librdkafka_partitions_ls_offset Partition's last stable offset on broker, or same as hi_offset is broker version is less than 0.11.0.0.
# TYPE librdkafka_partitions_ls_offset gauge
librdkafka_partitions_ls_offset{partition="-1",topic="example"} -1001
librdkafka_partitions_ls_offset{partition="0",topic="example"} 502316
librdkafka_partitions_ls_offset{partition="1",topic="example"} 381691
librdkafka_partitions_ls_offset{partition="2",topic="example"} 400983
# HELP librdkafka_partitions_msgq_bytes Number of bytes in msgq_cnt.
# TYPE librdkafka_partitions_msgq_bytes gauge
librdkafka_partitions_msgq_bytes{partition="-1",topic="example"} 0
librdkafka_partitions_msgq_bytes{partition="0",topic="example"} 0
librdkafka_partitions_msgq_bytes{partition="1",topic="example"} 0
librdkafka_partitions_msgq_bytes{partition="2",topic="example"} 0
# HELP librdkafka_partitions_msgq_cnt Number of messages waiting to be produced in first-level queue.
# TYPE librdkafka_partitions_msgq_cnt gauge
librdkafka_partitions_msgq_cnt{partition="-1",topic="example"} 0
librdkafka_partitions_msgq_cnt{partition="0",topic="example"} 0
librdkafka_partitions_msgq_cnt{partition="1",topic="example"} 0
librdkafka_partitions_msgq_cnt{partition="2",topic="example"} 0
# HELP librdkafka_partitions_msgs Total number of messages received (consumer, same as rxmsgs), or total number of messages produced (possibly not yet transmitted) (producer).
# TYPE librdkafka_partitions_msgs counter
librdkafka_partitions_msgs{partition="-1",topic="example"} 0
librdkafka_partitions_msgs{partition="0",topic="example"} 70907
librdkafka_partitions_msgs{partition="1",topic="example"} 2692
librdkafka_partitions_msgs{partition="2",topic="example"} 26401
# HELP librdkafka_partitions_msgs_inflight Current number of messages in-flight to/from broker.
# TYPE librdkafka_partitions_msgs_inflight gauge
librdkafka_partitions_msgs_inflight{partition="-1",topic="example"} 0
librdkafka_partitions_msgs_inflight{partition="0",topic="example"} 0
librdkafka_partitions_msgs_inflight{partition="1",topic="example"} 0
librdkafka_partitions_msgs_inflight{partition="2",topic="example"} 0
# HELP librdkafka_partitions_next_ack_seq Next expected acked sequence (idempotent producer).
# TYPE librdkafka_partitions_next_ack_seq gauge
librdkafka_partitions_next_ack_seq{partition="-1",topic="example"} 0
librdkafka_partitions_next_ack_seq{partition="0",topic="example"} 0
librdkafka_partitions_next_ack_seq{partition="1",topic="example"} 0
librdkafka_partitions_next_ack_seq{partition="2",topic="example"} 0
# HELP librdkafka_partitions_next_err_seq Next expected errored sequence (idempotent producer).
# TYPE librdkafka_partitions_next_err_seq gauge
librdkafka_partitions_next_err_seq{partition="-1",topic="example"} 0
librdkafka_partitions_next_err_seq{partition="0",topic="example"} 0
librdkafka_partitions_next_err_seq{partition="1",topic="example"} 0
librdkafka_partitions_next_err_seq{partition="2",topic="example"} 0
# HELP librdkafka_partitions_next_offset Next offset to fetch.
# TYPE librdkafka_partitions_next_offset gauge
librdkafka_partitions_next_offset{partition="-1",topic="example"} 0
librdkafka_partitions_next_offset{partition="0",topic="example"} 502316
librdkafka_partitions_next_offset{partition="1",topic="example"} 381691
librdkafka_partitions_next_offset{partition="2",topic="example"} 400983
# HELP librdkafka_partitions_query_offset Current/Last logical offset query.
# TYPE librdkafka_partitions_query_offset gauge
librdkafka_partitions_query_offset{partition="-1",topic="example"} -1001
librdkafka_partitions_query_offset{partition="0",topic="example"} -1001
librdkafka_partitions_query_offset{partition="1",topic="example"} -1001
librdkafka_partitions_query_offset{partition="2",topic="example"} -1001
# HELP librdkafka_partitions_rx_ver_drops Dropped outdated messages.
# TYPE librdkafka_partitions_rx_ver_drops counter
librdkafka_partitions_rx_ver_drops{partition="-1",topic="example"} 0
librdkafka_partitions_rx_ver_drops{partition="0",topic="example"} 0
librdkafka_partitions_rx_ver_drops{partition="1",topic="example"} 0
librdkafka_partitions_rx_ver_drops{partition="2",topic="example"} 0
# HELP librdkafka_partitions_rxbytes Total number of bytes received for rxmsgs.
# TYPE librdkafka_partitions_rxbytes counter
librdkafka_partitions_rxbytes{partition="-1",topic="example"} 0
librdkafka_partitions_rxbytes{partition="0",topic="example"} 283628
librdkafka_partitions_rxbytes{partition="1",topic="example"} 10768
librdkafka_partitions_rxbytes{partition="2",topic="example"} 105604
# HELP librdkafka_partitions_rxmsgs Total number of messages consumed, not including ignored messages (due to offset, etc).
# TYPE librdkafka_partitions_rxmsgs counter
librdkafka_partitions_rxmsgs{partition="-1",topic="example"} 0
librdkafka_partitions_rxmsgs{partition="0",topic="example"} 70907
librdkafka_partitions_rxmsgs{partition="1",topic="example"} 2692
librdkafka_partitions_rxmsgs{partition="2",topic="example"} 26401
# HELP librdkafka_partitions_stored_leader_epoch Partition leader epoch of stored offset.
# TYPE librdkafka_partitions_stored_leader_epoch counter
librdkafka_partitions_stored_leader_epoch{partition="-1",topic="example"} -1
librdkafka_partitions_stored_leader_epoch{partition="0",topic="example"} 0
librdkafka_partitions_stored_leader_epoch{partition="1",topic="example"} 0
librdkafka_partitions_stored_leader_epoch{partition="2",topic="example"} 0
# HELP librdkafka_partitions_stored_offset Offset to be committed.
# TYPE librdkafka_partitions_stored_offset gauge
librdkafka_partitions_stored_offset{partition="-1",topic="example"} -1001
librdkafka_partitions_stored_offset{partition="0",topic="example"} 502316
librdkafka_partitions_stored_offset{partition="1",topic="example"} 381691
librdkafka_partitions_stored_offset{partition="2",topic="example"} 400983
# HELP librdkafka_partitions_txbytes Total number of bytes transmitted for txmsgs.
# TYPE librdkafka_partitions_txbytes counter
librdkafka_partitions_txbytes{partition="-1",topic="example"} 0
librdkafka_partitions_txbytes{partition="0",topic="example"} 0
librdkafka_partitions_txbytes{partition="1",topic="example"} 0
librdkafka_partitions_txbytes{partition="2",topic="example"} 0
# HELP librdkafka_partitions_txmsgs Total number of messages transmitted (produced).
# TYPE librdkafka_partitions_txmsgs counter
librdkafka_partitions_txmsgs{partition="-1",topic="example"} 0
librdkafka_partitions_txmsgs{partition="0",topic="example"} 0
librdkafka_partitions_txmsgs{partition="1",topic="example"} 0
librdkafka_partitions_txmsgs{partition="2",topic="example"} 0
# HELP librdkafka_partitions_xmit_msgq_bytes Number of bytes in xmit_msgq.
# TYPE librdkafka_partitions_xmit_msgq_bytes gauge
librdkafka_partitions_xmit_msgq_bytes{partition="-1",topic="example"} 0
librdkafka_partitions_xmit_msgq_bytes{partition="0",topic="example"} 0
librdkafka_partitions_xmit_msgq_bytes{partition="1",topic="example"} 0
librdkafka_partitions_xmit_msgq_bytes{partition="2",topic="example"} 0
# HELP librdkafka_partitions_xmit_msgq_cnt Number of messages ready to be produced in transmit queue.
# TYPE librdkafka_partitions_xmit_msgq_cnt gauge
librdkafka_partitions_xmit_msgq_cnt{partition="-1",topic="example"} 0
librdkafka_partitions_xmit_msgq_cnt{partition="0",topic="example"} 0
librdkafka_partitions_xmit_msgq_cnt{partition="1",topic="example"} 0
librdkafka_partitions_xmit_msgq_cnt{partition="2",topic="example"} 0
# HELP librdkafka_replyq Number of ops (callbacks, events, etc) waiting in queue for application to serve with rd_kafka_poll().
# TYPE librdkafka_replyq gauge
librdkafka_replyq{client_id="rdkafka",type="consumer"} 0
# HELP librdkafka_rx Total number of responses received from Kafka brokers.
# TYPE librdkafka_rx counter
librdkafka_rx{client_id="rdkafka",type="consumer"} 108
# HELP librdkafka_rx_bytes Total number of bytes received from Kafka brokers.
# TYPE librdkafka_rx_bytes counter
librdkafka_rx_bytes{client_id="rdkafka",type="consumer"} 1.231274e+06
# HELP librdkafka_rxmsg_bytes Total number of message bytes (including framing) received from Kafka brokers.
# TYPE librdkafka_rxmsg_bytes counter
librdkafka_rxmsg_bytes{client_id="rdkafka",type="consumer"} 400000
# HELP librdkafka_rxmsgs Total number of messages consumed, not including ignored messages (due to offset, etc), from Kafka brokers.
# TYPE librdkafka_rxmsgs counter
librdkafka_rxmsgs{client_id="rdkafka",type="consumer"} 100000
# HELP librdkafka_simple_cnt Internal tracking of legacy vs new consumer API state.
# TYPE librdkafka_simple_cnt gauge
librdkafka_simple_cnt{client_id="rdkafka",type="consumer"} 0
# HELP librdkafka_time Wall clock time in seconds since the epoch.
# TYPE librdkafka_time counter
librdkafka_time{client_id="rdkafka",type="consumer"} 1.743361411e+09
# HELP librdkafka_topics_age Age of client's topic object (milliseconds).
# TYPE librdkafka_topics_age gauge
librdkafka_topics_age{topic="example"} 40039
# HELP librdkafka_topics_batchcnt Batch message counts.
# TYPE librdkafka_topics_batchcnt summary
librdkafka_topics_batchcnt{topic="example",quantile="0.5"} 0
librdkafka_topics_batchcnt{topic="example",quantile="0.75"} 0
librdkafka_topics_batchcnt{topic="example",quantile="0.9"} 0
librdkafka_topics_batchcnt{topic="example",quantile="0.95"} 0
librdkafka_topics_batchcnt{topic="example",quantile="0.99"} 0
librdkafka_topics_batchcnt{topic="example",quantile="0.9999"} 0
librdkafka_topics_batchcnt_sum{topic="example"} 0
librdkafka_topics_batchcnt_count{topic="example"} 0
# HELP librdkafka_topics_batchsize Batch sizes in bytes.
# TYPE librdkafka_topics_batchsize summary
librdkafka_topics_batchsize{topic="example",quantile="0.5"} 0
librdkafka_topics_batchsize{topic="example",quantile="0.75"} 0
librdkafka_topics_batchsize{topic="example",quantile="0.9"} 0
librdkafka_topics_batchsize{topic="example",quantile="0.95"} 0
librdkafka_topics_batchsize{topic="example",quantile="0.99"} 0
librdkafka_topics_batchsize{topic="example",quantile="0.9999"} 0
librdkafka_topics_batchsize_sum{topic="example"} 0
librdkafka_topics_batchsize_count{topic="example"} 0
# HELP librdkafka_topics_metadata_age Age of metadata from broker for this topic (milliseconds).
# TYPE librdkafka_topics_metadata_age gauge
librdkafka_topics_metadata_age{topic="example"} 40046
# HELP librdkafka_ts librdkafka's internal monotonic clock (microseconds).
# TYPE librdkafka_ts counter
librdkafka_ts{client_id="rdkafka",type="consumer"} 7.188851185e+09
# HELP librdkafka_tx Total number of requests sent to Kafka brokers.
# TYPE librdkafka_tx counter
librdkafka_tx{client_id="rdkafka",type="consumer"} 109
# HELP librdkafka_tx_bytes Total number of bytes transmitted to Kafka brokers.
# TYPE librdkafka_tx_bytes counter
librdkafka_tx_bytes{client_id="rdkafka",type="consumer"} 14930
# HELP librdkafka_txmsg_bytes Total number of message bytes (including framing, such as per-Message framing and MessageSet/batch framing) transmitted to Kafka brokers.
# TYPE librdkafka_txmsg_bytes counter
librdkafka_txmsg_bytes{client_id="rdkafka",type="consumer"} 0
# HELP librdkafka_txmsgs Total number of messages transmitted (produced) to Kafka brokers.
# TYPE librdkafka_txmsgs counter
librdkafka_txmsgs{client_id="rdkafka",type="consumer"} 0
